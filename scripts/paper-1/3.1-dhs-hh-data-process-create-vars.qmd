---
title: "Process variables in the HH dataset"
format: html
editor: source
---

## Run the read-data script
```{r run-code-to-read-hh-data, message=FALSE, warning=FALSE}
runAllChunks("./scripts/paper-1/1.3.2-data-processing-read-household-raw-data.qmd")
# beep(sound = 4)
```

# View the dataframe with variable names and labels
```{r}
# View(df_names_labels_HH)
```

# rename variables
```{r rename-vars}
df_dhs_HH <-  setnames(df_dhs_HH_raw_dt,
                       old = c("hv021"),
                       new = c("psu"))
```

# Drop cases
```{r}
df_dhs_HH_valid <- df_dhs_HH[hv204 != "don't know"] # time to get water: 480 cases dropped
```

# Create new variables

## water sources and cooking fuel

```{r}
df_dhs_HH_temp <- df_dhs_HH_valid[, 
  # Water resources and cooking fuel                                 
  ## time to get water
  water_time_mins := ifelse(hv204 == "on premises", 0, as.numeric(hv204))
  ][, ':=' (
  ## water more than 15 mins away  
  water_more_than_15 = ifelse(water_time_mins > 15, 1, 0),  
  ## water not available for at least one full day in the past 2 weeks
  water_na_for_a_day_past_2_weeks = ifelse(sh37b == "yes", 0, 1),
  ## source of drinking water
  water_source = fcase(
    str_detect(as.character(hv201), "pipe"), 0,
    str_detect(as.character(hv201), "bottled"), 0,
    str_detect(as.character(hv201), "plant"), 0,
    str_detect(as.character(hv201), "well"), 1,
    str_detect(as.character(hv201), "river"), 1,
    str_detect(as.character(hv201), "rain"), 1,
    str_detect(as.character(hv201), "spring"), 1,
    default = 0),
  ## cooking fuel
  cook_fuel = ifelse((hv226 == "electricity" | hv226 == "lpg" | hv226 == "natural gas" | 
      hv226 == "biogas" | hv226 == "no food cooked in house") == 1, 0, 1)
  
  )]
```
## Amenities and wealth index
```{r}
df_dhs_HH_temp <- df_dhs_HH_temp[, ':=' (
  # has electricity
  amen_no_electricity = ifelse(hv206 == "yes", 0, 1),
  # has fridge
  amen_no_fridge = ifelse(hv209 == "yes", 0, 1),
  # has AC or fan
  amen_no_fan_ac = ifelse((sh50q == "yes" | sh50g == "yes"), 0, 1),
  # poorest wealth quintile
  sli_poorest = ifelse(hv270a == "poorest", 1, 0),
  # place of residence 
  urban = ifelse(hv025 == "rural", 0, 1) 
)]
```


## household members, space shared etc.
```{r}
df_dhs_HH_temp <- df_dhs_HH_temp[, ':=' (
  # number of members in HH
  num_mem_tot = hv009,
  # number of rooms for sleeping
  num_rooms_sleep = as.numeric(hv216)
)][
  # Number of members per room
  , num_mem_per_room := num_mem_tot/num_rooms_sleep
][
  # number of members as a categorical var
  , num_mem_per_room_3 := ifelse(num_mem_per_room > 3, 1, 0)
][
  , hh_head_not_male := ifelse(hv219 != "male", 1, 0)
]
```

## number of members older than 60
```{r, warning=FALSE}
# First create a data subset for all age variables
age_cols <- grep("hv105", names(df_dhs_HH_temp), value = TRUE)
df_age <- df_dhs_HH_temp[, ..age_cols]

# Convert age from a factor to a numeric variable using a custom function
## as.double.factor <- function(x) {as.numeric(levels(x))[x]}
df_age <- sapply(df_age, as.double.factor)
df_age <- as.data.table(unlist(df_age))

# now calculate the number of members 60 years or older
df_age <- df_age[, num_mem_60 := rowSums(.SD >= 60 & !is.na(.SD)), 
                               .SDcols = hv105_01:hv105_35]

# Finally merge it back to the original dataset
df_dhs_HH_temp$num_mem_60 <- df_age$num_mem_60

# create a variable for proportion of members over 60
df_dhs_HH_temp <- df_dhs_HH_temp[, prop_mem_60 := num_mem_60 / num_mem_tot]

```


## Caste and access to healthcare
```{r}
df_dhs_HH_temp <- df_dhs_HH_temp[, ':=' (
  # scheduled caste
  sc = ifelse(sh49 == "scheduled caste", 1, 0),
  # has health insurance
  health_insurance = ifelse(sh71 == "yes", 0 , 1),
  # reports no nearby health facility
  no_public_fac = ifelse(sh74a == "no" | is.na(sh74a), 0, 1)
)]
```


## Educational Attainment

```{r}
#  create a vector with the variables I want to extact
age_edu_vars <- grep("hhid|hv105|hv108", names(df_dhs_HH_temp), value = T)

# now subset the columns in data.table
df_age_edu <- df_dhs_HH_temp[, ..age_edu_vars, with = FALSE]

# reshape from wide to long
df_age_edu_long <- melt(df_age_edu, 
                        measure.vars = patterns("^hv105", "^hv108"),
                        value.name = c("age", "edu_attainment"),
                        variable.name = "line_num")

# convert age variables from factor to numeric
df_age_edu_long <- df_age_edu_long[order(hhid)
                                   ][, 
                                   age := as.numeric(age)
                                   ][,
                                     edu_attainment := as.numeric(edu_attainment)
                                   ]

# identify cases with low education attainment for their age
df_age_edu_long <- df_age_edu_long[, 
    eligible_mem_edu := ifelse(age > 15, 1, 0)
    ][, 
    no_prim_edu := ifelse(eligible_mem_edu == 1 & edu_attainment < 5, 1, 0)
    ]

# aggregate the number of members with low edu attaniment in a HH
df_age_edu_long_aggr <- df_age_edu_long[, .(num_eligible_mem_edu = sum(eligible_mem_edu, na.rm = T), 
                                       num_no_prim_edu = sum(no_prim_edu, na.rm = T)),
                                   by = hhid][
                                     , prop_edu := num_no_prim_edu/num_eligible_mem_edu
                                   ]

#merge it back with the original dataset
df_dhs_HH_temp <- merge(df_dhs_HH_temp, df_age_edu_long_aggr,
                        by.x = "hhid", by.y = "hhid")


```

## proportion of members who are anaemic
### create a dataset of only anemia vars
```{r}

# create variables for number of members who are anemic and proportion of anemic people
df_dhs_HH_temp <- df_dhs_HH_temp[ , 
    num_mem_eligible_anemia := rowSums(!is.na(.SD)), 
    .SDcols = names(df_dhs_HH_temp) %like% ("h*57")
    ][ , 
    num_mem_anemic := rowSums(.SD == "severe" | .SD == "moderate" & !is.na(.SD)), 
    .SDcols = names(df_dhs_HH_temp) %like% ("h*57")
    ][ ,
      prop_mem_anemic := num_mem_anemic/num_mem_eligible_anemia
    ]
beep(sound = 5)
```

